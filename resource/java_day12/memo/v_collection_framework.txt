알고리즘
	어떤 문제가 발생되었을 때 해결할 수 있는 절차 혹은 순서.

자료구조(저장공간)
	의미없는 데이터를 하나의 정보로 만들어주는 알고리즘들의 집합.
	저장소의 종류에 대해 알아보자!

컬렉션 프레임워크(Collection Framework): 자료구조
	많은 데이터를 쉽고 효과적으로 관리할 수 있는 자료구조 클래스들의 집합.

List
	List는 인터페이스이다.

	1. Vector: 용량 관리, 보안성 강화, 처리량 감소
	2. LinkedList: FILO로 인해 넣을 때는 빨라도 원하는 위치의 데이터를 가져오는 것이 상대적으로 느리다.
	3. ArrayList: 인덱스로 데이터를 관리한다. 컬렉션 클래스 중 실무에서 가장 많이 사용되는 클래스이다.
		   배열의 특징인 인덱스를 이용하여 값을 저장하고 관리한다.

	※ 배열과 ArrayList의 차이
		배열은 길이에 제한을 두어야 할 때 사용되고
		ArrayList는 몇 개의 데이터가 들어올 지 알 수 없을 때 사용한다.

[실습 1]
과일 정보를 담을 클래스 선언(Fruit)
	- 과일 이름(중복 없음)
	- 과일 가격

CRUD관련 기능을 담아놓을 클래스 선언(Market)
	- 과일 추가
	- 과일 삭제
	- 과일 가격이 평균 가격보다 낮은 지 검사
	- 과일 전체 조회
	- 과일 이름으로 가격 조회

[실습 2]
음식 정보를 담을 클래스 선언(Food)
	- 음식 이름
	- 음식 가격
	- 음식 종류(한식, 중식, 일식, 양식)

CRUD관련 기능을 담아놓을 클래스 선언(Restaurant)
	- 음식 추가
	- 음식 이름으로 음식 종류 조회
	- 사용자가 원하는 종류의 음식 전체 조회
	- 음식 종류 수정 후 가격 10% 상승
	- 사용자가 원하는 종류의 음식 개수 조회

[숙제]
	직접 주제를 정한 뒤 CRUD 연습하기
	총 3가지의 주제로 구성하고 구현한다.

Set(집합)
	Set은 인터페이스이다. List와 마찬가지로 Collection 인터페이스를 상속받은 인터페이스이다.

	HashSet
		집합에서 중복되는 원소를 포함할 수 없는 것처럼
		HashSet이라는 자료구조는 중복되는 값을 무시한다.
		저장된 값들은 인덱스가 없기 때문에 순서가 없다.
		값의 유무 검사에 특화되어 있는 자료구조이고 해시코드로 유무 검사가 
		진행되기 때문에 속도가 상대적으로 좋다.

	Iterator
		순서가 없는 객체에 순서를 부여하거나, 순서가 있어도 Iterator 방식의 순서로
		변경하고자 할 때 사용한다.
		이 때 해당 객체에 iterator() 메소드를 붙여주고, 이 메소드의 리턴타입은
		Iterator이다.
		hasNext()를 사용하면, 다음 값이 있는지 검사하고, next()를 사용해서 값을 가져올 수 있다.

Map
	Set과 Collection 2개의 자료구조를 하나로 합친 자료구조이다.
	List와 Set처럼 Collection을 상속받지 않았고, 독립적인 자료구조이다.

	HashMap(서버간 데이터 전달)
		Key와 Value, 한 쌍으로 저장되며, 검색의 목적을 가지고 있다.
		Key에 중복된 값을 넣으면, Value가 최근 값으로 수정되고
		중복되지 않은 값을 넣으면 새롭게 추가된다.
		Value는 중복이 가능하다.



































